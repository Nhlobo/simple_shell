/* Filename: shell_functions.c */

#include "shell_header.h"
#include <stdio.h>
#include <stdlib.h>

/**
 * read_file - Read commands from a file
 * @filename: Name of the file to read commands from
 * @commands: Array to store commands
 * @env: Array of environment variables
 * @status: Exit status
 */
void read_file(char *filename, char ***commands, char **env, int *status)
{
    FILE *file;
    char *line = NULL;
    size_t len = 0;
    ssize_t read;
    size_t command_count = 0;
    char **temp_commands = NULL;

    file = fopen(filename, "r");
    if (file == NULL)
    {
        perror("fopen");
        exit(EXIT_FAILURE);
    }

    while ((read = getline(&line, &len, file)) != -1)
    {
        if (line[read - 1] == '\n')
            line[read - 1] = '\0';

        /* Skip empty lines */
        if (strcmp(line, "") != 0)
        {
            if (command_count == 0)
            {
                temp_commands = malloc(sizeof(char *));
            }
            else
            {
                temp_commands = realloc(temp_commands, (command_count + 1) * sizeof(char *));
            }

            if (temp_commands == NULL)
            {
                perror("malloc/realloc");
                exit(EXIT_FAILURE);
            }

            temp_commands[command_count] = strdup(line);
            if (temp_commands[command_count] == NULL)
            {
                perror("strdup");
                exit(EXIT_FAILURE);
            }

            command_count++;
        }
    }

    fclose(file);
    free(line);

    if (temp_commands != NULL)
    {
        *commands = temp_commands;
        execute_commands(*commands, env, status);
        free_commands(*commands);
    }
}
